name: Deploy to Server

on:
  push:
    branches:
      - v1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/crypto_trading_app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/crypto_trading_app:latest

    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/user/crypto_trading_platform
          docker exec -it postgres_db psql -U postgres
          \c trading_db
          SET session_replication_role = 'replica';
          
          DO $$
          DECLARE
              table_name TEXT;
          BEGIN
              FOR table_name IN
                  SELECT tablename
                  FROM pg_tables
                  WHERE schemaname = 'public'
              LOOP
                  EXECUTE FORMAT('TRUNCATE TABLE %I RESTART IDENTITY CASCADE;', table_name);
              END LOOP;
          END $$;
          SET session_replication_role = 'origin';

          DO $$ BEGIN
              RAISE NOTICE 'Все таблицы успешно очищены.';
          END $$;

          docker rm -f $(docker ps -aq)
          rm -r user_data/user_1
          git restore .
          git pull
          docker-compose down
          docker-compose up -d
